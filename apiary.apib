FORMAT: 1A
HOST: https://private-909ac-devsummit.apiary-mock.com

# devsummit

Dev summit API blueprints


## User Auth [/auth]

### Register a user [POST /auth/register]

+ Request (application/json)

        {
            "data": {
                "first_name": "andy",
                "last_name": "herman",
                "role": "attendee",
                "username": "andy",
                "email": "shi88.andy@gmail.com",
                "password": "andy123"
            }
        }

+ Response 200 (application/json)

    + Attributes (BaseResponse)

        + data (array[UserResponse])


+ Request (application/json)
    
    + Headers

            Accept: application/json

    + Attributes

        + data
            - provider: `facebook` (string, required) - valid provider
            - token: `1afe4345acc` (string, required) - valid token 

+ Response 200 (application/json)

    + Attributes (BaseResponse)

        + data (array[UserResponse])


### Login a User [POST /auth/login]

+ Request (application/json)

        {
            data: {
                "username": "andy",
                "password": "andy123"
            }
        }

+ Response 200 (application/json)

    + Attributes (BaseResponse)

        + data (Tokens)
            

+ Request (application/json)
    
    + Headers

            Accept: application/json

    + Attributes
        + data
            - provider: `facebook` (string, required) - valid provider
            - email: `shi88.andy@gmail.com` (string, required) - valid email 

+ Response 200 (application/json)

    + Attributes (BaseResponse)
    
        + meta
            - message: `User logged in` (string)
            - success: `true` (boolean)
        + data (Tokens)


## User Management [/api/v1/users]

### List of Users [GET]

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta
            - count: 10,
            - total: 10
        + data (array[UserResponse])
        + included 
            - ticket (array[TicketResponse])


### List of User photos [GET /api/v1/userphotos]

Get all user photos

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta (object)
            - message: `User photos retrieved successfully` (string)
            - success: `true` (boolean)
        + data (array[UserPhotoResponse])


### Show User [GET /api/v1/users/{user_id}]

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters
    - user_id: `1` (string, required) - Valid User ID

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta
            - count: 1,
            - total: 1
        + data (array[UserResponse]) 
        + included 
            - ticket (array[TicketResponse])


### Show User photo [GET /api/v1/userphoto]

Get single user photo

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta (object)
            - message: `User photo retrieved successfully` (string)
            - success: `true` (boolean)
        + data (array[UserPhotoResponse])


### Post User Photos [POST /api/v1/userphoto]

Post user photo

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (UserPhoto)

+ Response 200 (application/vnd.api+json)
    + Attributes (BaseResponse)
        + meta (object)
            - message: `Photo succesfully uploaded` (string)
            - success: `true` (boolean)
        + data (array[UserPhotoResponse])


### Update user photo [PATCH /api/userphoto]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (UserPhoto)

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta (object)
            - message:  `Stage successfully updated` (string)
            - success: `true` (boolean)
        + data (array[UserPhotoResponse])


### Update a User [PATCH /api/v1/users/{user_id}]
    
+ Parameters
    - user_id : `1` (string, required) - Valid User ID

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data
            - attributes (User)

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta
            - message: 'User succesfully updated'
            - success: true
        + data (array[UserResponse])


### Delete User Photo [DELETE /api/v1/userphoto]

User photo may be deleted

+ Request (application/json)

    + Headers
    
            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 204

## Orders [/api/v1/orders]

### Order a Ticket [POST]

+ Request (application/json)

    + Headers
                
                Accept: application/json
                Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (Order)
        
+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta
            - message: `order succesfull` (string)
            - success: true (boolean)
        + data (array[OrderResponse])


### Edit Order by id [PATCH /api/v1/orders/{order_id}]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (Order)


+ Parameters
    
    - order_id: `1` (number, required) - Valid order id

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta (object)
            - message: `Order data succesfully updated` (string)
            - success: `true` (boolean)
        + data (array[OrderResponse])
        

### Order List [GET]

+ Request (application/ json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8
    
+ Response 200 (application/json)
    
    + Attributes (BaseResponse)
        + meta
            - count: `10` (number)
            - total: `10` (number)
        + data (array[OrderResponse])
        + included
            - user (array[User])
            - ticket (array[Ticket])
        + links (object)
            - first: `https://private-909ac-devsummit.apiary-mock.com/api/v1/orders?page[limit]=10&page[offset]=0` (string, nullable)
            - last: `https://private-909ac-devsummit.apiary-mock.com/api/v1/orders?page[limit]=10&page[offset]=10` (string, nullable)
            - next: `https://private-909ac-devsummit.apiary-mock.com/api/v1/orders?page[limit]=10&page[offset]=10` (string, nullable)
            - prev: `null` (string, nullable)


### Order Details [GET /api/v1/orders/{order_id}]

+ Request (application/ json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters
    - order_id : `1` (string, required) - Valid Order ID
    
+ Response 200 (application/json)
    
    + Attributes (BaseResponse)
        + meta
            - count: `10` (number)
            - total: `10` (number)
        + data (array[Order])
        + included
            - user (array[UserResponse])
            - ticket (array[TicketResponse])


### Delete Orders [DELETE /api/v1/orders/{order_id}]

+ Request (application/json)

    + Headers
    
            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - order_id: `1` (number, required) - valid ticket id

+ Response 204

## Attendee [/api/v1/attendees]

Available include: `user`

### Get list of attendee [GET]

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta 
            - count: `10` (number)
            - total: `10` (number)
            - message: `Attendees successfully retrieved` (string)
            - success: `true` (boolean)
        + data (array[AttendeeResponse])
        + links 
            - first: `https://localhost:5000/api/v1/attendees?page[limit]=10&page[offset]=0` (string, nullable)
            - last: `https://localhost:5000/api/v1/attendees?page[limit]=10&page[offset]=10` (string, nullable)
            - next: `https://localhost:5000/api/v1/attendees?page[limit]=10&page[offset]=10` (string, nullable)
            - prev: `null` (string, nullable)


### Get Attendee by id [GET /api/v1/attendees/{attendee_id}]

+ Parameters 

    - attendee_id: `1` (number, required) - Valid attendee id

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta 
            - message: `Attendee successfully retrieved` (string)
            - success: `true` (boolean)
        + data (array[AttendeeResponse])
        + included 
            - user (array[UserResponse])

### Edit Attendee by id [PATCH /api/v1/attendees/{attendee_id}]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (Attendee)


+ Parameters
    
    - attendee_id: `1` (number, required) - Valid attendee id

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta 
            - message: `Attendee data succesfully updated` (string)
            - success: `true` (boolean)
        + data (array[AttendeeResponse])

### Get points log [GET /api/v1/pointslog]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta 
            - message: `Points log data succesfully retrieved` (string)
            - success: `true` (boolean)
        + data (array[PointsLogResponse])
        + included 
            - sender (array[BoothResponse])
            - receiver (array[AttendeeResponse])

## Booth [/api/v1/booths]

Available include: `user`, `stage`

### Get list of booths [GET]

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta
            - count: `10` (number)
            - total: `10` (number)
            - message: `Booths successfully retrieved` (string)
            - success: `true` (boolean)
        + data (array[BoothResponse])
        + links
            - first: `https://localhost:5000/api/v1/booths?page[limit]=10&page[offset]=0` (string, nullable)
            - last: `https://localhost:5000/api/v1/booths?page[limit]=10&page[offset]=10` (string, nullable)
            - next: `https://localhost:5000/api/v1/booths?page[limit]=10&page[offset]=10` (string, nullable)
            - prev: `null` (string, nullable)


### Get Booth by id [GET /api/v1/booths/{booth_id}]

+ Parameters

    - booth_id: `1` (number, required) - Valid booth id

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta
            - message: `Booth successfully retrieved` (string)
            - success: `true` (boolean)
        + data (array[BoothResponse])
        + included
            - user (array[UserResponse])
            - stage (array[StageResponse])

### Edit Booth by id [PATCH /api/v1/booths/{booth_id}]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (Booth)


+ Parameters
    
    - booth_id: `1` (number, required) - Valid booth id

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta
            - message: `Booth data succesfully updated` (string)
            - success: `true` (boolean)
        + data (array[BoothResponse])

### Send points to attendee [POST /api/v1/booths/transfer]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data
            - points: `100` (number, required) - amount of point to send
            - receiver: `1` (number, required) - valid attendee id

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta
            - message: `Point sent succesfully` (string)
            - success: `true` (boolean)
        + data (array[PointTransactionResponse])

## Speaker [/api/v1/speakers]

Available include: `user`, `material`

### Get list of speakers [GET]

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta (object)
            - count: `10` (number)
            - total: `10` (number)
            - message: `Speakers successfully retrieved` (string)
            - success: `true` (boolean)
        + data (array[SpeakerResponse])
        + links (object)
            - first: `https://localhost:5000/api/v1/speakers?page[limit]=10&page[offset]=0` (string, nullable)
            - last: `https://localhost:5000/api/v1/speakers?page[limit]=10&page[offset]=10` (string, nullable)
            - next: `https://localhost:5000/api/v1/speakers?page[limit]=10&page[offset]=10` (string, nullable)
            - prev: `null` (string, nullable)


### Get Speaker by id [GET /api/v1/speakers/{speaker_id}]

+ Parameters

    - speaker_id: `1` (number, required) - Valid speaker id

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta (object)
            - message: `Speaker successfully retrieved` (string)
            - success: `true` (boolean)
        + data (array[SpeakerResponse])
        + included (object)
            - user (array[UserResponse])
            - materials (array[MaterialResponse])

### Edit Speaker by id [PATCH /api/v1/speakers/{speaker_id}]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (Speaker)


+ Parameters
    
    - speaker_id: `1` (number, required) - Valid speaker id

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta (object)
            - message: `Speaker data succesfully updated` (string)
            - success: `true` (boolean)
        + data (array[SpeakerResponse])

## Tickets [/api/v1/tickets]

### Get list of tickets [GET]

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta (object)
          - count: `10` (number)
          - total: `10` (number)
        + links (object)
          - first: `https://localhost:5000/api/v1/tickets?page[limit]=10&page[offset]=0` (string, nullable)
          - last: `https://localhost:5000/api/v1/tickets?page[limit]=10&page[offset]=10` (string, nullable)
          - next: `https://localhost:5000/api/v1/tickets?page[limit]=10&page[offset]=10` (string, nullable)
          - prev: `null` (string, nullable)
        + data (array[TicketResponse])

### Get ticket filter by id [GET /api/v1/tickets/{id}]

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - id: `1` (number, required) - valid ticket id

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta (object)
            - message: `Ticket retrieved successfully` (string)
            - success: `true` (boolean)
        + data (array[TicketResponse])

### Edit ticket filter by id [PATCH /api/v1/tickets/{id}]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (Ticket)

+ Parameters
    
    - id: `1` (number, required) - valid ticket id

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta (object)
            - message:  `Ticket successfully updated` (string)
            - success: `true` (boolean)
        + data (array[TicketResponse])

### Transfer ticket [POST /api/v1/tickets/{ticket_id}/transfer]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (TicketTransferRequest)

+ Parameters
    
    - ticket_id: `1` (number, required) - valid ticket id

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta (object)
            - message:  `Ticket successfully transfered` (string)
            - success: `true` (boolean)
        + data (array[TicketResponse])
        + included (object)
            - from (array[UserResponse])
            - to (array[UserResponse])

### Ticket Transfer log [GET /api/v1/tickets/transfer/log]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta (object)
            - message:  `Ticket transfer log succesfully retrieved` (string)
            - success: `true` (boolean)
        + data (array[TicketTransferLog])
        + included (array)
            - (object)
                - sender (array[UserResponse])
                - receiver (array[UserResponse])
        + links (object)
          - first: `https://localhost:5000/api/v1/tickets/transfer/logs?page[limit]=10&page[offset]=0` (string, nullable)
          - last: `https://localhost:5000/api/v1/tickets/transfer/logs?page[limit]=10&page[offset]=10` (string, nullable)
          - next: `https://localhost:5000/api/v1/tickets/transfer/logs?page[limit]=10&page[offset]=10` (string, nullable)
          - prev: `null` (string, nullable)


### Post Ticket [POST /api/v1/tickets]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (Ticket)

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta (object)
            - message:  `Ticket successfully created` (string)
            - success: `true` (boolean)
        + data (array[TicketResponse])

### Delete ticket [DELETE /api/v1/tickets/{id}]

+ Request (application/json)

    + Headers
    
            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - id: `1` (number, required) - valid ticket id

+ Response 204

## Materials API [/api/v1/materials]


### Get list of speaker materials [GET]

Get list of all materials of: logged in speaker, all speakers, and material of related speaker by passing `?speaker_id=id` parameter

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta (object)
          - count: `10` (number)
          - total: `10` (number)
        + links (object)
          - first: `https://localhost:5000/api/v1/materials?page[limit]=10&page[offset]=0` (string, nullable)
          - last: `https://localhost:5000/api/v1/materials?page[limit]=10&page[offset]=10` (string, nullable)
          - next: `https://localhost:5000/api/v1/materials?page[limit]=10&page[offset]=10` (string, nullable)
          - prev: `null` (string, nullable)
        + data (array[MaterialResponse])

### Show Material [GET /api/v1/materials/{material_id}]

Request to spesific materials

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - material_id: `1` (number, required) - valid material id

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta (object)
            - message: `Material retrieved successfully` (string)
            - success: `true` (boolean)
        + data (array[MaterialResponse])

### Post Material [POST /api/v1/materials]

Speaker post new materials

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (Material)

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta (object)
            - message:  `Material successfully created` (string)
            - success: `true` (boolean)
        + data (array[MaterialResponse])


### Delete Material [DELETE /api/v1/materials/{id}]

Speaker may delete his/her materials

+ Request (application/json)

    + Headers
    
            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - id: `1` (number, required) - valid material id

+ Response 204

## Events API [/api/v1/events]


### Get list of events [GET]

Get list of all events available filters: `user_id`, `time`, `stage_id`

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta (object)
          - count: `10` (number)
          - total: `10` (number)
        + links (object)
          - first: `https://localhost:5000/api/v1/events?page[limit]=10&page[offset]=0` (string, nullable)
          - last: `https://localhost:5000/api/v1/events?page[limit]=10&page[offset]=10` (string, nullable)
          - next: `https://localhost:5000/api/v1/events?page[limit]=10&page[offset]=10` (string, nullable)
          - prev: `null` (string, nullable)
        + data (array[EventResponse])

### Show event [GET /api/v1/events/{event_id}]

Request to spesific event

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - event_id: `1` (number, required) - valid event id

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta (object)
            - message: `Event retrieved successfully` (string)
            - success: `true` (boolean)
        + data (array[EventResponse])

### Post Event [POST /api/v1/events]

post new events

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (Event)

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta (object)
            - message:  `Event successfully created` (string)
            - success: `true` (boolean)
        + data (array[EventResponse])

### Edit event filter by id [PATCH /api/v1/tickets/{event_id}]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (Event)

+ Parameters
    
    - event_id: `1` (number, required) - valid event id

+ Response 200 (application/json)

    + Attributes(BaseResponse)
        + meta (object)
            - message:  `Event successfully updated` (string)
            - success: `true` (boolean)
        + data (array[EventResponse])

### Delete Event [DELETE /api/v1/events/{event_id}]

Event may deleted 

+ Request (application/json)

    + Headers
    
            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - event_id: `1` (number, required) - valid event id

+ Response 204

## Stage API [/api/v1/stages]

Management of stages

### Get list of stages [GET]

Get list of all stages

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta (object)
          - count: `10` (number)
          - total: `10` (number)
        + links (object)
          - first: `https://localhost:5000/api/v1/stages?page[limit]=10&page[offset]=0` (string, nullable)
          - last: `https://localhost:5000/api/v1/stages?page[limit]=10&page[offset]=10` (string, nullable)
          - next: `https://localhost:5000/api/v1/stages?page[limit]=10&page[offset]=10` (string, nullable)
          - prev: `null` (string, nullable)
        + data (array[StageResponse])

### Show Stage [GET /api/v1/stages/{stage_id}]

Request to spesific stage

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - stage_id: `1` (number, required) - valid stage id

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta (object)
            - message: `Stage retrieved successfully` (string)
            - success: `true` (boolean)
        + data (array[StageResponse])


### Show Stage pictures [GET /api/v1/stages/{stage_id}/pictures]

Get all spesific stage pictures

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - stage_id: `1` (number, required) - valid stage id

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta (object)
            - message: `Pictures retrieved successfully` (string)
            - success: `true` (boolean)
        + data (array[StagePictureResponse])


### Show Single Stage pictures [GET /api/v1/stages/{stage_id}/pictures/{id}]

Get single spesific stage pictures

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - stage_id: `1` (number, required) - valid stage id

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta (object)
            - message: `Pictures retrieved successfully` (string)
            - success: `true` (boolean)
        + data (array[StagePictureResponse])


### Show stage spot [GET /api/v1/stages/{stage_id}/spots]

Get all spots included in spesific stage

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - stage_id: `1` (number, required) - valid stage id

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta (object)
            - message: `Spots retrieved successfully` (string)
            - success: `true` (boolean)
        + data (array[SpotResponse])

### Post Stage [POST /api/v1/stages]

post new stage

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (Stage)

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta (object)
            - message:  `Stage successfully created` (string)
            - success: `true` (boolean)
        + data (array[StageResponse])

### Post Stage Picture [POST /api/v1/stages/{stage_id}/pictures]

Post stage pictures

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (StagePicture)

+ Parameters

    - stage_id: `1` (number, required) - valid stage id

+ Response 200 (application/vnd.api+json)
    + Attributes (BaseResponse)
        + meta (object)
            - message: `Photo succesfully uploaded` (string)
            - success: `true` (boolean)
        + data (array[StagePictureResponse])


### Edit Stage Picture [PATCH /api/v1/stages/{stage_id}/pictures/{id}]

Edit stage pictures

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (StagePicture)

+ Parameters

    - stage_id: `1` (number, required) - valid stage id
    - id: `1` (number, required) - valid id

+ Response 200 (application/vnd.api+json)
    + Attributes (BaseResponse)
        + meta (object)
            - message: `Photo succesfully uploaded` (string)
            - success: `true` (boolean)
        + data (array[StagePictureResponse])


### Edit stage filter by id [PATCH /api/v1/stages/{event_id}]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

    + Attributes
        + data (Stage)

+ Parameters
    
    - event_id: `1` (number, required) - valid event id

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta (object)
            - message:  `Stage successfully updated` (string)
            - success: `true` (boolean)
        + data (array[StageResponse])

### Delete Stage [DELETE /api/v1/stages/{stage_id}]

Stage may be deleted 

+ Request (application/json)

    + Headers
    
            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - stage_id: `1` (number, required) - valid stage id

+ Response 204

### Delete Stage Pictures [DELETE /api/v1/stages/{stage_id}/pictures/{picture_id}]

Stage picture may be deleted

+ Request (application/json)

    + Headers
    
            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - stage_id: `1` (number, required) - valid stage id
    - picture_id: `1` (number, required) - valid stage picture id

+ Response 204

## Beacon API [/api/v1/beacons]

Management of beacons

### Get list of beacons [GET]

Get list of all beacons

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta (object)
          - count: `10` (number)
          - total: `10` (number)
        + links (object)
          - first: `https://localhost:5000/api/v1/beacons?page[limit]=10&page[offset]=0` (string, nullable)
          - last: `https://localhost:5000/api/v1/beacons?page[limit]=10&page[offset]=10` (string, nullable)
          - next: `https://localhost:5000/api/v1/beacons?page[limit]=10&page[offset]=10` (string, nullable)
          - prev: `null` (string, nullable)
        + data (array[BeaconResponse])

### Show Beacon [GET /api/v1/beacons/{beacon_id}]

Request to spesific beacon

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - beacon_id: `1` (number, required) - valid beacon id

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta (object)
            - message: `Beacon retrieved successfully` (string)
            - success: `true` (boolean)
        + data (array[BeaconResponse])
        + included (object)
            - stage (array[StageResponse])

### Post Beacon [POST /api/v1/beacons]

post new beacon

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Attributes (Beacon)

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta (object)
            - message:  `Beacon successfully created` (string)
            - success: `true` (boolean)
        + data (array[BeaconResponse])
        + included (object)
            - spot (array[SpotResponse])

### Edit beacon filter by id [PATCH /api/v1/beacons/{beacon_id}]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8


+ Attributes (object)
  + data (object)
      - type: beacon (string)
      - attributes (object)
        - stage_id: `1` (number) - valid stage id

+ Parameters
    
    - beacon_id: `1` (number, required) - valid beacon id

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta (object)
            - message:  `Beacon successfully updated` (string)
            - success: `true` (boolean)
        + data (array[BeaconResponse])
        + included (object)
          - stage (array[SpotResponse])


### Delete Beacon [DELETE /api/v1/beacons/{beacon_id}]

Beacon may be deleted

+ Request (application/json)

    + Headers
    
            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - beacon_id: `1` (number, required) - valid beacon id

+ Response 204

## Spots [/api/v1/spots]

Management of stages

### Get list of spots [GET]

Get list of all spots

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta (object)
          - count: `10` (number)
          - total: `10` (number)
        + links (object)
          - first: `https://localhost:5000/api/v1/spots?page[limit]=10&page[offset]=0` (string, nullable)
          - last: `https://localhost:5000/api/v1/spots?page[limit]=10&page[offset]=10` (string, nullable)
          - next: `https://localhost:5000/api/v1/spots?page[limit]=10&page[offset]=10` (string, nullable)
          - prev: `null` (string, nullable)
        + data (array[SpotResponse])

### Show spot [GET /api/v1/spots/{spot_id}]

May include `beacon`

Request to spesific spot

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - spot_id: `1` (number, required) - valid spot id

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta (object)
            - message: `Spot retrieved successfully` (string)
            - success: `true` (boolean)
        + data (array[SpotResponse])
        + included (object)
            - beacon (array[BeaconResponse])
            - stage (array[StageResponse])


### Edit spot filter by id [PATCH /api/v1/spots/{spot_id}]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Attributes (object)
    + data (object)
        - type: spot (string)
        - attributes (object)
            - coordinate_x: `12` (number)
            - coordinate_y: `10` (number)
            - stage_id: `1` (number) - valid stage id
            - beacon_id: `1` (number) - valid beacon id

+ Parameters
    
    - spot_id: `1` (number, required) - valid spot id

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta (object)
            - message:  `Spot successfully updated` (string)
            - success: `true` (boolean)
        + data (array[BeaconResponse])
        + included (object)
          - beacon (array[BeaconResponse])
          - stage (array[StageResponse])

### Delete Spot [DELETE /api/v1/spots/{spot_id}]

Spot may be deleted 

+ Request (application/json)

    + Headers
    
            Accept: application/json
            Authorization: Bearer eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8

+ Parameters

    - spot_id: `1` (number, required) - valid spot id

+ Response 204







## Data Structures

### BaseResponse
- `data` (array[object])
- `links` (nullable)
- `included` (array[object])
- `meta`
    - message: `operation complete succesfully`
    - success: true (boolean)

### ErrorResponse
- `data` (nullable)
- `links` (nullable)
- `included` (nullable)
- `meta`
    - message: `operation fail`
    - success: false (boolean)


###  User
- first_name: `andy` (string),
- last_name: `herman` (string),
- username: `andy` (string),
- email: `shi88.andy@gmail.com` (string),

###  UserResponse
- id: 1 (number)
- Include User
- created_at: `Wed, 02 Aug 2017 15:18:31 GMT` (string)
- updated_at: `Wed, 02 Aug 2017 15:18:31 GMT` (string)

### UserPhoto
- image_data: `https://placeimg.com/640/480/any` (string)

### UserPhotoResponse
- id: 1 (number)
- user_id: 1 (number)
- url: `https://placeimg.com/640/480/any` (string)
- created_at: `Wed, 02 Aug 2017 15:18:31 GMT` (string)
- updated_at: `Wed, 02 Aug 2017 15:18:31 GMT` (string)

### Tokens
- access_token: `eyJhbGciOiJIUzI1NiIsImlhdCI6MTUwMTY2MjYxNywiZXhwIjoxNTAxNjY4NjE3fQ.eyJpZCI6MX0.9-XppdnTm-FoLgOpR8DIjAAHAr7pkimu-RJL-oma9-8` (string) - a valid access token
- refresh_token: `126991391b52558b` (string) - a valid refresh token

### Ticket
- ticket_type: `gold` (string)
- price: 100000 (number)
- information: `information about the ticket` (string)

### TicketResponse
- id: 1 (number)
- Include Ticket
- created_at: `2017-06-23 20:27:16` (string, nullable)
- updated_at: `2017-06-23 20:27:16` (string, nullable)

### TicketTransferLog
- id: 1 (number)
- ticket_id: 1 (number)
- sender_user_id: 1 (number)
- receiver_user_id: 2 (number)
- created_at: `2017-06-23 20:27:16` (string, nullable)
- updated_at: `2017-06-23 20:27:16` (string, nullable)


### TicketTransferRequest
- user_ticket_id: 1 (number) - valid user ID
- receiver_user_id: 1 (number) - valid user ID

### Order
- user_id: 1 (number)
- order (array)
    - (object)
        - ticket_id: 1 (number) 
 
 
### OrderResponse
- id: 1 (number)
- Include Order

    


### Booth
- points: 100 (number)
- summary: `some information about booth` (string)

### BoothResponse
- id: 1 (number)
- Include Booth
- created_at: `2017-06-23 20:27:16` (string, nullable)
- updated_at: `2017-06-23 20:27:16` (string, nullable)

### Attendee
- feature_code: `123f` (string)
- points: 100 (number)
- user_id: 1

### AttendeeResponse
- id: 1 (number)
- Include Attendee
- user (UserResponse)
- created_at: `2017-06-23 20:27:16` (string, nullable)
- updated_at: `2017-06-23 20:27:16` (string, nullable)  

### Stage
- stage_type: `stage type` (string)
- information: `information about the stage` (string)

### StageResponse
- id: 1 (number)
- Include Stage
- created_at: `2017-06-23 20:27:16` (string, nullable)
- updated_at: `2017-06-23 20:27:16` (string, nullable)


### StagePicture
- image_file: `https://placeimg.com/640/480/any` (string)

### StagePictureResponse
- id: 1 (number)
- stage_id: 1 (number)
- url: `https://placeimg.com/640/480/any` (string)
- created_at: `2017-06-23 20:27:16` (string, nullable)
- updated_at: `2017-06-23 20:27:16` (string, nullable)

### Speaker
- summary: `some information about speaker` (string)
- job: `job` (string)
- information: `some information` (string)

### SpeakerResponse
- id: 1 (number)
- Include Speaker
- created_at: `2017-06-23 20:27:16` (string, nullable)
- updated_at: `2017-06-23 20:27:16` (string, nullable)

### Material
- material_data: `material/path` (string)
- material_name: `material_name` (string)

### MaterialResponse
- id: 1 (number)
- Include Material
- created_at: `2017-06-23 20:27:16` (string, nullable)
- updated_at: `2017-06-23 20:27:16` (string, nullable)

### PointTransactionResponse
- points: 100 (number)
- from: 1 (number, required) - valid booth id
- to: 1 (number, required) - valid attendee id

### PointsLogResponse
- id: 1 (number)
- amount: 100 (number) - amount of point transfered
- created_at: `2017-06-23 20:27:16` (string, nullable)
- updated_at: `2017-06-23 20:27:16` (string, nullable)

### Spot
- coordinate_x: 12 (number)
- coordinate_y: 14 (number)

### SpotResponse
- id: 1 (number)
- Include Spot
- created_at: `2017-06-23 20:27:16` (string, nullable)
- updated_at: `2017-06-23 20:27:16` (string, nullable)

### Event
- information: `information about the event` (string)
- time_start: `event starting time` (string)
- time_end: `event ending time` (string)

### EventResponse
- id: 1 (number)
- Include Event
- created_at: `2017-06-23 20:27:16` (string, nullable)
- updated_at: `2017-06-23 20:27:16` (string, nullable)

### Beacon
- code: `beacon code` (string)

### BeaconResponse
- id: 1 (number)
- Include Beacon
- created_at: `2017-06-23 20:27:16` (string, nullable)
- updated_at: `2017-06-23 20:27:16` (string, nullable)

