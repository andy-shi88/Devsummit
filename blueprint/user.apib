## User Management [/api/v1/users]

### List of Users [GET]

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer :[Gist](data/token.apib)

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta
            - count: 10,
            - total: 10
        + data (array[UserResponse])
        + included 
            - ticket (array[TicketResponse])


### List of User photos [GET /api/v1/userphotos]

Get all user photos

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer :[Gist](data/token.apib)

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta (object)
            - message: `User photos retrieved successfully` (string)
            - success: `true` (boolean)
        + data (array[UserPhotoResponse])


### Show User [GET /api/v1/users/{user_id}]

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer :[Gist](data/token.apib)

+ Parameters
    - user_id: `1` (string, required) - Valid User ID

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta
            - count: 1,
            - total: 1
        + data (array[UserResponse]) 
        + included 
            - ticket (array[TicketResponse])


### Show User photo [GET /api/v1/userphoto]

Get single user photo

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer :[Gist](data/token.apib)

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta (object)
            - message: `User photo retrieved successfully` (string)
            - success: `true` (boolean)
        + data (array[UserPhotoResponse])


### Post User Photos [POST /api/v1/userphoto]

Post user photo

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer :[Gist](data/token.apib)

    + Attributes
        + data (UserPhoto)

+ Response 200 (application/vnd.api+json)
    + Attributes (BaseResponse)
        + meta (object)
            - message: `Photo succesfully uploaded` (string)
            - success: `true` (boolean)
        + data (array[UserPhotoResponse])


### Update user photo [PATCH /api/userphoto]

+ Request (application/json)
    
    + Headers

            Accept: application/json
            Authorization: Bearer :[Gist](data/token.apib)

    + Attributes
        + data (UserPhoto)

+ Response 200 (application/json)

    + Attributes (BaseResponse)
        + meta (object)
            - message:  `Stage successfully updated` (string)
            - success: `true` (boolean)
        + data (array[UserPhotoResponse])


### Update a User [PATCH /api/v1/users/{user_id}]
    
+ Parameters
    - user_id : `1` (string, required) - Valid User ID

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer :[Gist](data/token.apib)

    + Attributes
        + data
            - attributes (User)

+ Response 200 (application/json)
    + Attributes (BaseResponse)
        + meta
            - message: 'User succesfully updated'
            - success: true
        + data (array[UserResponse])


### Delete User Photo [DELETE /api/v1/userphoto]

User photo may be deleted

+ Request (application/json)

    + Headers
    
            Accept: application/json
            Authorization: Bearer :[Gist](data/token.apib)

+ Response 204